/**
 * ---------------------------------------------------------------------------------
 * This file has been generated by Sanity TypeGen.
 * Command: `sanity typegen generate`
 *
 * Any modifications made directly to this file will be overwritten the next time
 * the TypeScript definitions are generated. Please make changes to the Sanity
 * schema definitions and/or GROQ queries if you need to update these types.
 *
 * For more information on how to use Sanity TypeGen, visit the official documentation:
 * https://www.sanity.io/docs/sanity-typegen
 * ---------------------------------------------------------------------------------
 */

// Source: schema.json
export type SanityImagePaletteSwatch = {
  _type: "sanity.imagePaletteSwatch";
  background?: string;
  foreground?: string;
  population?: number;
  title?: string;
};

export type SanityImagePalette = {
  _type: "sanity.imagePalette";
  darkMuted?: SanityImagePaletteSwatch;
  lightVibrant?: SanityImagePaletteSwatch;
  darkVibrant?: SanityImagePaletteSwatch;
  vibrant?: SanityImagePaletteSwatch;
  dominant?: SanityImagePaletteSwatch;
  lightMuted?: SanityImagePaletteSwatch;
  muted?: SanityImagePaletteSwatch;
};

export type SanityImageDimensions = {
  _type: "sanity.imageDimensions";
  height?: number;
  width?: number;
  aspectRatio?: number;
};

export type SanityFileAsset = {
  _id: string;
  _type: "sanity.fileAsset";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  originalFilename?: string;
  label?: string;
  title?: string;
  description?: string;
  altText?: string;
  sha1hash?: string;
  extension?: string;
  mimeType?: string;
  size?: number;
  assetId?: string;
  uploadId?: string;
  path?: string;
  url?: string;
  source?: SanityAssetSourceData;
};

export type Geopoint = {
  _type: "geopoint";
  lat?: number;
  lng?: number;
  alt?: number;
};

export type MembershipJoinContent = {
  _id: string;
  _type: "membershipJoinContent";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  joinSectionTitle?: string;
  joinSectionSubTitle?: string;
  joinSectionText?: string;
  joinDetails?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal" | "Normal" | "h1" | "h2" | "h3" | "h4" | "blockquote";
    listItem?: "bullet";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  } | {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
    _key: string;
  }>;
};

export type MembershipCategoriesContent = {
  _id: string;
  _type: "membershipCategoriesContent";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  membershipCategoriesImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  membershipCategoriesTitle?: string;
  membershipCategoriesText?: string;
  membershipCategoriestDetails?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal" | "Normal" | "h1" | "h2" | "h3" | "h4" | "blockquote";
    listItem?: "bullet";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  } | {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
    _key: string;
  }>;
};

export type MembershipBenefitContent = {
  _id: string;
  _type: "membershipBenefitContent";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  benefitSectionTitle?: string;
  benefitSectionSubTitle?: string;
  benefitectionText?: string;
  benefitContent?: Array<{
    benefitHeading?: string;
    benefitText?: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal" | "Normal" | "h1" | "h2" | "h3" | "h4" | "blockquote";
      listItem?: "bullet";
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    } | {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      alt?: string;
      _type: "image";
      _key: string;
    }>;
    benefitImage?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      _type: "image";
    };
    _key: string;
  }>;
};

export type MembershipHeroContent = {
  _id: string;
  _type: "membershipHeroContent";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  heroSectionTitle?: string;
  heroSectionSubTitle?: string;
  heroSectionText?: string;
  heroSectionImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
};

export type ContactVisitContent = {
  _id: string;
  _type: "contactVisitContent";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  vistSectionTitle?: string;
  vistSectionSubTitle?: string;
  vistSectionText?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal" | "Normal" | "h1" | "h2" | "h3" | "h4" | "blockquote";
    listItem?: "bullet";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  } | {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
    _key: string;
  }>;
  vistSectionImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
};

export type ContactContent = {
  _id: string;
  _type: "contactContent";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  contactSectionTitle?: string;
  contactSectionSubTitle?: string;
  contactSectionText?: string;
  contactSectionImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
};

export type AboutCommunityMembershipContent = {
  _id: string;
  _type: "aboutCommunityMembershipContent";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  communityTitle?: string;
  communityText?: string;
  membershipTitle?: string;
  membershipText?: string;
  communityBackgroundImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
};

export type AboutSportsContent = {
  _id: string;
  _type: "aboutSportsContent";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  sportsSectionTitle?: string;
  sportSectionSubTitle?: string;
  sportSectionText?: string;
  sportBackgroundImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  sportsContent?: Array<{
    sportHeading?: string;
    sportText?: string;
    sportImage?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      _type: "image";
    };
    _key: string;
  }>;
};

export type AboutMissionVisionContent = {
  _id: string;
  _type: "aboutMissionVisionContent";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  missionTitle?: string;
  missionText?: string;
  aboutBackgroundImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  missionImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  visionTitle?: string;
  visionText?: string;
  visionImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
};

export type AboutHeroContent = {
  _id: string;
  _type: "aboutHeroContent";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  heroSectionTitle?: string;
  heroSectionSubTitle?: string;
  heroSectionText?: string;
  heroSectionImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
};

export type HomeSponsorContent = {
  _id: string;
  _type: "homeSponsorContent";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  sponsorSectionTitle?: string;
  sponsorSectionSubTitle?: string;
  sponsorSectionText?: string;
  sponsorSectionImages?: Array<{
    sponsorImage?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      _type: "image";
    };
    sponsorTitle?: string;
    _key: string;
  }>;
};

export type HomeLegacyContent = {
  _id: string;
  _type: "homeLegacyContent";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  legacySectionTitle?: string;
  legacySectionSubTitle?: string;
  legacySectionContent?: Array<{
    legacySectionHeadingText?: string;
    LegacySectionText?: string;
    legacySectionImage?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      _type: "image";
    };
    _key: string;
  }>;
};

export type HomeAboutContent = {
  _id: string;
  _type: "homeAboutContent";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  aboutSectionTitle?: string;
  aboutSectionSubTitle?: string;
  aboutSectionText?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal" | "Normal" | "h1" | "h2" | "h3" | "h4" | "blockquote";
    listItem?: "bullet";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  } | {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
    _key: string;
  }>;
  aboutSectionImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
};

export type HomeHeroContent = {
  _id: string;
  _type: "homeHeroContent";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  heroSectionTitle?: string;
  heroSectionSubTitle?: string;
  heroSectionText?: string;
  heroSectionImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
};

export type GolfCourse = {
  _id: string;
  _type: "golfCourse";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  golfCourseFeatureImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  golfCourseTitle?: string;
  golfCourseSlug?: Slug;
  golfCourseExcerpt?: string;
  golfCourseAuthor?: string;
  golfCourseDate?: string;
  golfCourseDetails?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal" | "Normal" | "h1" | "h2" | "h3" | "h4" | "blockquote";
    listItem?: "bullet";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  } | {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
    _key: string;
  }>;
  golfCourseShowCaseImage1?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  golfCourseShowCaseImage2?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  golfCourseEstablishedHeading?: string;
  golfCourseEstablishedSubText?: string;
  golfCourseEstablishedStats1?: string;
  golfCourseEstablishedStats2?: string;
};

export type Tournaments = {
  _id: string;
  _type: "tournaments";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  tournamentFeatureImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  tournamentTitle?: string;
  tournamentSlug?: Slug;
  tournamentExcerpt?: string;
  tournamentAuthor?: string;
  tournamentDate?: string;
  tournamentDetails?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal" | "Normal" | "h1" | "h2" | "h3" | "h4" | "blockquote";
    listItem?: "bullet";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  } | {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
    _key: string;
  }>;
};

export type BlockContent = Array<{
  children?: Array<{
    marks?: Array<string>;
    text?: string;
    _type: "span";
    _key: string;
  }>;
  style?: "normal" | "Normal" | "h1" | "h2" | "h3" | "h4" | "blockquote";
  listItem?: "bullet";
  markDefs?: Array<{
    href?: string;
    _type: "link";
    _key: string;
  }>;
  level?: number;
  _type: "block";
  _key: string;
} | {
  asset?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
  };
  hotspot?: SanityImageHotspot;
  crop?: SanityImageCrop;
  alt?: string;
  _type: "image";
  _key: string;
}>;

export type NewsAndUpdates = {
  _id: string;
  _type: "newsAndUpdates";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  newsUpdateFeatureImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  newsUpdateTitle?: string;
  newsUpdateSlug?: Slug;
  newsUpdateExcerpt?: string;
  newsUpdateAuthor?: string;
  newsUpdateDate?: string;
  newsUpdateDetails?: BlockContent;
};

export type Slug = {
  _type: "slug";
  current?: string;
  source?: string;
};

export type OpenGraphImage = {
  _id: string;
  _type: "openGraphImage";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  featuredOpenGraphImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
  };
};

export type Banner = {
  _id: string;
  _type: "banner";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  bannerTitle?: string;
  bannerSubTitle?: string;
  bannerText?: string;
  bannerImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
  };
};

export type SanityImageCrop = {
  _type: "sanity.imageCrop";
  top?: number;
  bottom?: number;
  left?: number;
  right?: number;
};

export type SanityImageHotspot = {
  _type: "sanity.imageHotspot";
  x?: number;
  y?: number;
  height?: number;
  width?: number;
};

export type SanityImageAsset = {
  _id: string;
  _type: "sanity.imageAsset";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  originalFilename?: string;
  label?: string;
  title?: string;
  description?: string;
  altText?: string;
  sha1hash?: string;
  extension?: string;
  mimeType?: string;
  size?: number;
  assetId?: string;
  uploadId?: string;
  path?: string;
  url?: string;
  metadata?: SanityImageMetadata;
  source?: SanityAssetSourceData;
};

export type SanityAssetSourceData = {
  _type: "sanity.assetSourceData";
  name?: string;
  id?: string;
  url?: string;
};

export type SanityImageMetadata = {
  _type: "sanity.imageMetadata";
  location?: Geopoint;
  dimensions?: SanityImageDimensions;
  palette?: SanityImagePalette;
  lqip?: string;
  blurHash?: string;
  hasAlpha?: boolean;
  isOpaque?: boolean;
};

export type AllSanitySchemaTypes = SanityImagePaletteSwatch | SanityImagePalette | SanityImageDimensions | SanityFileAsset | Geopoint | MembershipJoinContent | MembershipCategoriesContent | MembershipBenefitContent | MembershipHeroContent | ContactVisitContent | ContactContent | AboutCommunityMembershipContent | AboutSportsContent | AboutMissionVisionContent | AboutHeroContent | HomeSponsorContent | HomeLegacyContent | HomeAboutContent | HomeHeroContent | GolfCourse | Tournaments | BlockContent | NewsAndUpdates | Slug | OpenGraphImage | Banner | SanityImageCrop | SanityImageHotspot | SanityImageAsset | SanityAssetSourceData | SanityImageMetadata;
export declare const internalGroqTypeReferenceTo: unique symbol;
// Source: ./src/sanity/lib/queries.ts
// Variable: BANNER_QUERY
// Query: *[_type=="banner"]{  bannerTitle,  bannerSubTitle,  bannerText,  bannerImage{asset->}}
export type BANNER_QUERYResult = Array<{
  bannerTitle: string | null;
  bannerSubTitle: string | null;
  bannerText: string | null;
  bannerImage: {
    asset: {
      _id: string;
      _type: "sanity.imageAsset";
      _createdAt: string;
      _updatedAt: string;
      _rev: string;
      originalFilename?: string;
      label?: string;
      title?: string;
      description?: string;
      altText?: string;
      sha1hash?: string;
      extension?: string;
      mimeType?: string;
      size?: number;
      assetId?: string;
      uploadId?: string;
      path?: string;
      url?: string;
      metadata?: SanityImageMetadata;
      source?: SanityAssetSourceData;
    } | null;
  } | null;
}>;
// Variable: OPENGRAPHIMAGE_QUERY
// Query: *[_type=="openGraphImage"]{    featuredOpenGraphImage{asset->}}
export type OPENGRAPHIMAGE_QUERYResult = Array<{
  featuredOpenGraphImage: {
    asset: {
      _id: string;
      _type: "sanity.imageAsset";
      _createdAt: string;
      _updatedAt: string;
      _rev: string;
      originalFilename?: string;
      label?: string;
      title?: string;
      description?: string;
      altText?: string;
      sha1hash?: string;
      extension?: string;
      mimeType?: string;
      size?: number;
      assetId?: string;
      uploadId?: string;
      path?: string;
      url?: string;
      metadata?: SanityImageMetadata;
      source?: SanityAssetSourceData;
    } | null;
  } | null;
}>;
// Variable: HOMEHEROCONTENT_QUERY
// Query: *[_type=="homeHeroContent"]{  heroSectionTitle,  heroSectionSubTitle,  heroSectionText,  heroSectionImage{asset->},  }
export type HOMEHEROCONTENT_QUERYResult = Array<{
  heroSectionTitle: string | null;
  heroSectionSubTitle: string | null;
  heroSectionText: string | null;
  heroSectionImage: {
    asset: {
      _id: string;
      _type: "sanity.imageAsset";
      _createdAt: string;
      _updatedAt: string;
      _rev: string;
      originalFilename?: string;
      label?: string;
      title?: string;
      description?: string;
      altText?: string;
      sha1hash?: string;
      extension?: string;
      mimeType?: string;
      size?: number;
      assetId?: string;
      uploadId?: string;
      path?: string;
      url?: string;
      metadata?: SanityImageMetadata;
      source?: SanityAssetSourceData;
    } | null;
  } | null;
}>;
// Variable: HOMEABOUTCONTENT_QUERY
// Query: *[_type=="homeAboutContent"]{  aboutSectionTitle,  aboutSectionSubTitle,  aboutSectionText,  aboutSectionImage,  }
export type HOMEABOUTCONTENT_QUERYResult = Array<{
  aboutSectionTitle: string | null;
  aboutSectionSubTitle: string | null;
  aboutSectionText: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "normal" | "Normal";
    listItem?: "bullet";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  } | {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
    _key: string;
  }> | null;
  aboutSectionImage: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  } | null;
}>;
// Variable: HOMELEGACYCONTENT_QUERY
// Query: *[_type=="homeLegacyContent"]{  legacySectionTitle,  legacySectionSubTitle,  legacySectionContent,  legacySectionHeadingText,  legacySectionImage,  }
export type HOMELEGACYCONTENT_QUERYResult = Array<{
  legacySectionTitle: string | null;
  legacySectionSubTitle: string | null;
  legacySectionContent: Array<{
    legacySectionHeadingText?: string;
    LegacySectionText?: string;
    legacySectionImage?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      _type: "image";
    };
    _key: string;
  }> | null;
  legacySectionHeadingText: null;
  legacySectionImage: null;
}>;
// Variable: HOMESPONSORCONTENT_QUERY
// Query: *[_type=="homeSponsorContent"]{  sponsorSectionTitle,  sponsorSectionSubTitle,  sponsorSectionText,  sponsorSectionImages,  sponsorImage[]{sponsorImage{asset->{url}}},  sponsorTitle,  }
export type HOMESPONSORCONTENT_QUERYResult = Array<{
  sponsorSectionTitle: string | null;
  sponsorSectionSubTitle: string | null;
  sponsorSectionText: string | null;
  sponsorSectionImages: Array<{
    sponsorImage?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      _type: "image";
    };
    sponsorTitle?: string;
    _key: string;
  }> | null;
  sponsorImage: null;
  sponsorTitle: null;
}>;
// Variable: ABOUTHEROCONTENT_QUERY
// Query: *[_type=="aboutHeroContent"]{    heroSectionTitle,    heroSectionSubTitle,    heroSectionText,    heroSectionImage{asset->},    }
export type ABOUTHEROCONTENT_QUERYResult = Array<{
  heroSectionTitle: string | null;
  heroSectionSubTitle: string | null;
  heroSectionText: string | null;
  heroSectionImage: {
    asset: {
      _id: string;
      _type: "sanity.imageAsset";
      _createdAt: string;
      _updatedAt: string;
      _rev: string;
      originalFilename?: string;
      label?: string;
      title?: string;
      description?: string;
      altText?: string;
      sha1hash?: string;
      extension?: string;
      mimeType?: string;
      size?: number;
      assetId?: string;
      uploadId?: string;
      path?: string;
      url?: string;
      metadata?: SanityImageMetadata;
      source?: SanityAssetSourceData;
    } | null;
  } | null;
}>;
// Variable: ABOUTMISSIONVISIONCONTENT_QUERY
// Query: *[_type=="aboutMissionVisionContent"]{    missionTitle,    missionText,    aboutBackgroundImage,    missionImage,    visionTitle,    visionText,    visionImage,    }
export type ABOUTMISSIONVISIONCONTENT_QUERYResult = Array<{
  missionTitle: string | null;
  missionText: string | null;
  aboutBackgroundImage: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  } | null;
  missionImage: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  } | null;
  visionTitle: string | null;
  visionText: string | null;
  visionImage: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  } | null;
}>;
// Variable: ABOUTSPORTSCONTENT_QUERY
// Query: *[_type=="aboutSportsContent"]{      sportsSectionTitle,      sportSectionSubTitle,      sportSectionText,      sportBackgroundImage,      sportsContent,      sportHeading,      sportText,      sportImage,      }
export type ABOUTSPORTSCONTENT_QUERYResult = Array<{
  sportsSectionTitle: string | null;
  sportSectionSubTitle: string | null;
  sportSectionText: string | null;
  sportBackgroundImage: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  } | null;
  sportsContent: Array<{
    sportHeading?: string;
    sportText?: string;
    sportImage?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      _type: "image";
    };
    _key: string;
  }> | null;
  sportHeading: null;
  sportText: null;
  sportImage: null;
}>;
// Variable: ABOUTCOMMUNITYMEMBERSHIPCONTENT_QUERY
// Query: *[_type=="aboutCommunityMembershipContent"]{              communityTitle,              communityText,              membershipTitle,              membershipText,              communityBackgroundImage,              }
export type ABOUTCOMMUNITYMEMBERSHIPCONTENT_QUERYResult = Array<{
  communityTitle: string | null;
  communityText: string | null;
  membershipTitle: string | null;
  membershipText: string | null;
  communityBackgroundImage: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  } | null;
}>;
// Variable: CONTACTCONTENT_QUERY
// Query: *[_type=="contactContent"]{            contactSectionTitle,            contactSectionText,             }
export type CONTACTCONTENT_QUERYResult = Array<{
  contactSectionTitle: string | null;
  contactSectionText: string | null;
}>;
// Variable: CONTACTVISTCONTENT_QUERY
// Query: *[_type=="contactVisitContent"]{            vistSectionTitle,            vistSectionText,             vistSectionImage,            }
export type CONTACTVISTCONTENT_QUERYResult = Array<{
  vistSectionTitle: string | null;
  vistSectionText: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "normal" | "Normal";
    listItem?: "bullet";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  } | {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
    _key: string;
  }> | null;
  vistSectionImage: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  } | null;
}>;
// Variable: MEMBERSHIPHEROCONTENT_QUERY
// Query: *[_type=="membershipHeroContent"]{              heroSectionTitle,              heroSectionSubTitle,              heroSectionText,              heroSectionImage{asset->},              }
export type MEMBERSHIPHEROCONTENT_QUERYResult = Array<{
  heroSectionTitle: string | null;
  heroSectionSubTitle: string | null;
  heroSectionText: string | null;
  heroSectionImage: {
    asset: {
      _id: string;
      _type: "sanity.imageAsset";
      _createdAt: string;
      _updatedAt: string;
      _rev: string;
      originalFilename?: string;
      label?: string;
      title?: string;
      description?: string;
      altText?: string;
      sha1hash?: string;
      extension?: string;
      mimeType?: string;
      size?: number;
      assetId?: string;
      uploadId?: string;
      path?: string;
      url?: string;
      metadata?: SanityImageMetadata;
      source?: SanityAssetSourceData;
    } | null;
  } | null;
}>;
// Variable: MEMBERSHIPBENEFITCONTENT_QUERY
// Query: *[_type=="membershipBenefitContent"]{              benefitSectionTitle,              benefitSectionSubTitle,              benefitectionText,              benefitContent,              benefitHeading,              benefitText,              benefitImage,              }
export type MEMBERSHIPBENEFITCONTENT_QUERYResult = Array<{
  benefitSectionTitle: string | null;
  benefitSectionSubTitle: string | null;
  benefitectionText: string | null;
  benefitContent: Array<{
    benefitHeading?: string;
    benefitText?: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "normal" | "Normal";
      listItem?: "bullet";
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    } | {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      alt?: string;
      _type: "image";
      _key: string;
    }>;
    benefitImage?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      _type: "image";
    };
    _key: string;
  }> | null;
  benefitHeading: null;
  benefitText: null;
  benefitImage: null;
}>;
// Variable: MEMBERSHIPCATEGORIESCONTENT_QUERY
// Query: *[_type=="membershipCategoriesContent"]{              membershipCategoriesTitle,              membershipCategoriesText,              membershipCategoriestDetails,              membershipCategoriesImage,              }
export type MEMBERSHIPCATEGORIESCONTENT_QUERYResult = Array<{
  membershipCategoriesTitle: string | null;
  membershipCategoriesText: string | null;
  membershipCategoriestDetails: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "normal" | "Normal";
    listItem?: "bullet";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  } | {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
    _key: string;
  }> | null;
  membershipCategoriesImage: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  } | null;
}>;
// Variable: MEMBERSHIPJOINCONTENT_QUERY
// Query: *[_type=="membershipJoinContent"]{              joinSectionTitle,              joinSectionSubTitle,              joinSectionText,              joinDetails,              }
export type MEMBERSHIPJOINCONTENT_QUERYResult = Array<{
  joinSectionTitle: string | null;
  joinSectionSubTitle: string | null;
  joinSectionText: string | null;
  joinDetails: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "normal" | "Normal";
    listItem?: "bullet";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  } | {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
    _key: string;
  }> | null;
}>;
// Variable: NEWSANDUPDATETYPE_QUERY
// Query: *[_type=="newsAndUpdates"]{      newsUpdateFeatureImage{asset->},      newsUpdateTitle,      newsUpdateSlug,      newsUpdateExcerpt,      newsUpdateAuthor,      newsUpdateDate,      newsUpdateDetails,    }
export type NEWSANDUPDATETYPE_QUERYResult = Array<{
  newsUpdateFeatureImage: {
    asset: {
      _id: string;
      _type: "sanity.imageAsset";
      _createdAt: string;
      _updatedAt: string;
      _rev: string;
      originalFilename?: string;
      label?: string;
      title?: string;
      description?: string;
      altText?: string;
      sha1hash?: string;
      extension?: string;
      mimeType?: string;
      size?: number;
      assetId?: string;
      uploadId?: string;
      path?: string;
      url?: string;
      metadata?: SanityImageMetadata;
      source?: SanityAssetSourceData;
    } | null;
  } | null;
  newsUpdateTitle: string | null;
  newsUpdateSlug: Slug | null;
  newsUpdateExcerpt: string | null;
  newsUpdateAuthor: string | null;
  newsUpdateDate: string | null;
  newsUpdateDetails: BlockContent | null;
}>;
// Variable: SINGLE_NEWSANDUPDATETYPE_QUERY
// Query: *[_type=="newsAndUpdates" && newsUpdateSlug.current==$slug][0]{      newsUpdateFeatureImage{asset->},      newsUpdateTitle,      newsUpdateSlug,      newsUpdateExcerpt,      newsUpdateAuthor,      newsUpdateDate,      newsUpdateDetails,    }
export type SINGLE_NEWSANDUPDATETYPE_QUERYResult = {
  newsUpdateFeatureImage: {
    asset: {
      _id: string;
      _type: "sanity.imageAsset";
      _createdAt: string;
      _updatedAt: string;
      _rev: string;
      originalFilename?: string;
      label?: string;
      title?: string;
      description?: string;
      altText?: string;
      sha1hash?: string;
      extension?: string;
      mimeType?: string;
      size?: number;
      assetId?: string;
      uploadId?: string;
      path?: string;
      url?: string;
      metadata?: SanityImageMetadata;
      source?: SanityAssetSourceData;
    } | null;
  } | null;
  newsUpdateTitle: string | null;
  newsUpdateSlug: Slug | null;
  newsUpdateExcerpt: string | null;
  newsUpdateAuthor: string | null;
  newsUpdateDate: string | null;
  newsUpdateDetails: BlockContent | null;
} | null;
// Variable: TOURNAMENT_QUERY
// Query: *[_type=="tournaments"]{      tournamentFeatureImage{asset->},      tournamentTitle,      tournamentSlug,      tournamentExcerpt,      tournamentAuthor,      tournamentDate,      tournamentDetails,    }
export type TOURNAMENT_QUERYResult = Array<{
  tournamentFeatureImage: {
    asset: {
      _id: string;
      _type: "sanity.imageAsset";
      _createdAt: string;
      _updatedAt: string;
      _rev: string;
      originalFilename?: string;
      label?: string;
      title?: string;
      description?: string;
      altText?: string;
      sha1hash?: string;
      extension?: string;
      mimeType?: string;
      size?: number;
      assetId?: string;
      uploadId?: string;
      path?: string;
      url?: string;
      metadata?: SanityImageMetadata;
      source?: SanityAssetSourceData;
    } | null;
  } | null;
  tournamentTitle: string | null;
  tournamentSlug: Slug | null;
  tournamentExcerpt: string | null;
  tournamentAuthor: string | null;
  tournamentDate: string | null;
  tournamentDetails: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "normal" | "Normal";
    listItem?: "bullet";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  } | {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
    _key: string;
  }> | null;
}>;
// Variable: SINGLE_TOURNAMEN_QUERY
// Query: *[_type=="tournaments" && tournamentSlug.current==$tournamentSlug][0]{      tournamentFeatureImage{asset->},      tournamentTitle,      tournamentSlug,      tournamentExcerpt,      tournamentAuthor,      tournamentDate,      tournamentDetails,    }
export type SINGLE_TOURNAMEN_QUERYResult = {
  tournamentFeatureImage: {
    asset: {
      _id: string;
      _type: "sanity.imageAsset";
      _createdAt: string;
      _updatedAt: string;
      _rev: string;
      originalFilename?: string;
      label?: string;
      title?: string;
      description?: string;
      altText?: string;
      sha1hash?: string;
      extension?: string;
      mimeType?: string;
      size?: number;
      assetId?: string;
      uploadId?: string;
      path?: string;
      url?: string;
      metadata?: SanityImageMetadata;
      source?: SanityAssetSourceData;
    } | null;
  } | null;
  tournamentTitle: string | null;
  tournamentSlug: Slug | null;
  tournamentExcerpt: string | null;
  tournamentAuthor: string | null;
  tournamentDate: string | null;
  tournamentDetails: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "normal" | "Normal";
    listItem?: "bullet";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  } | {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
    _key: string;
  }> | null;
} | null;
// Variable: GOLFCOURSE_QUERY
// Query: *[_type=="golfCourse"]{      golfCourseFeatureImage{asset->},      golfCourseTitle,      golfCourseSlug,      golfCourseExcerpt,      golfCourseAuthor,      golfCourseDate,      golfCourseDetails,    }
export type GOLFCOURSE_QUERYResult = Array<{
  golfCourseFeatureImage: {
    asset: {
      _id: string;
      _type: "sanity.imageAsset";
      _createdAt: string;
      _updatedAt: string;
      _rev: string;
      originalFilename?: string;
      label?: string;
      title?: string;
      description?: string;
      altText?: string;
      sha1hash?: string;
      extension?: string;
      mimeType?: string;
      size?: number;
      assetId?: string;
      uploadId?: string;
      path?: string;
      url?: string;
      metadata?: SanityImageMetadata;
      source?: SanityAssetSourceData;
    } | null;
  } | null;
  golfCourseTitle: string | null;
  golfCourseSlug: Slug | null;
  golfCourseExcerpt: string | null;
  golfCourseAuthor: string | null;
  golfCourseDate: string | null;
  golfCourseDetails: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "normal" | "Normal";
    listItem?: "bullet";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  } | {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
    _key: string;
  }> | null;
}>;
// Variable: SINGLE_GOLFCOURSE_QUERY
// Query: *[_type=="golfCourse" && golfCourseSlug.current==$slug][0]{      golfCourseFeatureImage{asset->},      golfCourseTitle,      golfCourseSlug,      golfCourseExcerpt,      golfCourseAuthor,      golfCourseDate,      golfCourseDetails,      golfCourseShowCaseImage1,      golfCourseShowCaseImage2,      golfCourseEstablishedHeading,      golfCourseEstablishedSubText,      golfCourseEstablishedStats1,      golfCourseEstablishedStats2,    }
export type SINGLE_GOLFCOURSE_QUERYResult = {
  golfCourseFeatureImage: {
    asset: {
      _id: string;
      _type: "sanity.imageAsset";
      _createdAt: string;
      _updatedAt: string;
      _rev: string;
      originalFilename?: string;
      label?: string;
      title?: string;
      description?: string;
      altText?: string;
      sha1hash?: string;
      extension?: string;
      mimeType?: string;
      size?: number;
      assetId?: string;
      uploadId?: string;
      path?: string;
      url?: string;
      metadata?: SanityImageMetadata;
      source?: SanityAssetSourceData;
    } | null;
  } | null;
  golfCourseTitle: string | null;
  golfCourseSlug: Slug | null;
  golfCourseExcerpt: string | null;
  golfCourseAuthor: string | null;
  golfCourseDate: string | null;
  golfCourseDetails: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "normal" | "Normal";
    listItem?: "bullet";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  } | {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
    _key: string;
  }> | null;
  golfCourseShowCaseImage1: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  } | null;
  golfCourseShowCaseImage2: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  } | null;
  golfCourseEstablishedHeading: string | null;
  golfCourseEstablishedSubText: string | null;
  golfCourseEstablishedStats1: string | null;
  golfCourseEstablishedStats2: string | null;
} | null;

// Query TypeMap
import "@sanity/client";
declare module "@sanity/client" {
  interface SanityQueries {
    "*[_type==\"banner\"]{\n  bannerTitle,\n  bannerSubTitle,\n  bannerText,\n  bannerImage{asset->}}": BANNER_QUERYResult;
    "*[_type==\"openGraphImage\"]{\n    featuredOpenGraphImage{asset->}}": OPENGRAPHIMAGE_QUERYResult;
    "*[_type==\"homeHeroContent\"]{\n  heroSectionTitle,\n  heroSectionSubTitle,\n  heroSectionText,\n  heroSectionImage{asset->},\n  }": HOMEHEROCONTENT_QUERYResult;
    "*[_type==\"homeAboutContent\"]{\n  aboutSectionTitle,\n  aboutSectionSubTitle,\n  aboutSectionText,\n  aboutSectionImage,\n  }": HOMEABOUTCONTENT_QUERYResult;
    "*[_type==\"homeLegacyContent\"]{\n  legacySectionTitle,\n  legacySectionSubTitle,\n  legacySectionContent,\n  legacySectionHeadingText,\n  legacySectionImage,\n  }": HOMELEGACYCONTENT_QUERYResult;
    "*[_type==\"homeSponsorContent\"]{\n  sponsorSectionTitle,\n  sponsorSectionSubTitle,\n  sponsorSectionText,\n  sponsorSectionImages,\n  sponsorImage[]{sponsorImage{asset->{url}}},\n  sponsorTitle,\n  }": HOMESPONSORCONTENT_QUERYResult;
    "*[_type==\"aboutHeroContent\"]{\n    heroSectionTitle,\n    heroSectionSubTitle,\n    heroSectionText,\n    heroSectionImage{asset->},\n    }": ABOUTHEROCONTENT_QUERYResult;
    "*[_type==\"aboutMissionVisionContent\"]{\n    missionTitle,\n    missionText,\n    aboutBackgroundImage,\n    missionImage,\n    visionTitle,\n    visionText,\n    visionImage,\n    }": ABOUTMISSIONVISIONCONTENT_QUERYResult;
    "*[_type==\"aboutSportsContent\"]{\n      sportsSectionTitle,\n      sportSectionSubTitle,\n      sportSectionText,\n      sportBackgroundImage,\n      sportsContent,\n      sportHeading,\n      sportText,\n      sportImage,\n      }": ABOUTSPORTSCONTENT_QUERYResult;
    "*[_type==\"aboutCommunityMembershipContent\"]{\n              communityTitle,\n              communityText,\n              membershipTitle,\n              membershipText,\n              communityBackgroundImage,\n              }": ABOUTCOMMUNITYMEMBERSHIPCONTENT_QUERYResult;
    "*[_type==\"contactContent\"]{\n            contactSectionTitle,\n            contactSectionText, \n            }": CONTACTCONTENT_QUERYResult;
    "*[_type==\"contactVisitContent\"]{\n            vistSectionTitle,\n            vistSectionText, \n            vistSectionImage,\n            }": CONTACTVISTCONTENT_QUERYResult;
    "*[_type==\"membershipHeroContent\"]{\n              heroSectionTitle,\n              heroSectionSubTitle,\n              heroSectionText,\n              heroSectionImage{asset->},\n              }": MEMBERSHIPHEROCONTENT_QUERYResult;
    "*[_type==\"membershipBenefitContent\"]{\n              benefitSectionTitle,\n              benefitSectionSubTitle,\n              benefitectionText,\n              benefitContent,\n              benefitHeading,\n              benefitText,\n              benefitImage,\n              }": MEMBERSHIPBENEFITCONTENT_QUERYResult;
    "*[_type==\"membershipCategoriesContent\"]{\n              membershipCategoriesTitle,\n              membershipCategoriesText,\n              membershipCategoriestDetails,\n              membershipCategoriesImage,\n              }": MEMBERSHIPCATEGORIESCONTENT_QUERYResult;
    "*[_type==\"membershipJoinContent\"]{\n              joinSectionTitle,\n              joinSectionSubTitle,\n              joinSectionText,\n              joinDetails,\n              }": MEMBERSHIPJOINCONTENT_QUERYResult;
    "*[_type==\"newsAndUpdates\"]{\n      newsUpdateFeatureImage{asset->},\n      newsUpdateTitle,\n      newsUpdateSlug,\n      newsUpdateExcerpt,\n      newsUpdateAuthor,\n      newsUpdateDate,\n      newsUpdateDetails,\n    }": NEWSANDUPDATETYPE_QUERYResult;
    "*[_type==\"newsAndUpdates\" && newsUpdateSlug.current==$slug][0]{\n      newsUpdateFeatureImage{asset->},\n      newsUpdateTitle,\n      newsUpdateSlug,\n      newsUpdateExcerpt,\n      newsUpdateAuthor,\n      newsUpdateDate,\n      newsUpdateDetails,\n    }": SINGLE_NEWSANDUPDATETYPE_QUERYResult;
    "*[_type==\"tournaments\"]{\n      tournamentFeatureImage{asset->},\n      tournamentTitle,\n      tournamentSlug,\n      tournamentExcerpt,\n      tournamentAuthor,\n      tournamentDate,\n      tournamentDetails,\n    }": TOURNAMENT_QUERYResult;
    "*[_type==\"tournaments\" && tournamentSlug.current==$tournamentSlug][0]{\n      tournamentFeatureImage{asset->},\n      tournamentTitle,\n      tournamentSlug,\n      tournamentExcerpt,\n      tournamentAuthor,\n      tournamentDate,\n      tournamentDetails,\n    }": SINGLE_TOURNAMEN_QUERYResult;
    "*[_type==\"golfCourse\"]{\n      golfCourseFeatureImage{asset->},\n      golfCourseTitle,\n      golfCourseSlug,\n      golfCourseExcerpt,\n      golfCourseAuthor,\n      golfCourseDate,\n      golfCourseDetails,\n    }": GOLFCOURSE_QUERYResult;
    "*[_type==\"golfCourse\" && golfCourseSlug.current==$slug][0]{\n      golfCourseFeatureImage{asset->},\n      golfCourseTitle,\n      golfCourseSlug,\n      golfCourseExcerpt,\n      golfCourseAuthor,\n      golfCourseDate,\n      golfCourseDetails,\n      golfCourseShowCaseImage1,\n      golfCourseShowCaseImage2,\n      golfCourseEstablishedHeading,\n      golfCourseEstablishedSubText,\n      golfCourseEstablishedStats1,\n      golfCourseEstablishedStats2,\n    }": SINGLE_GOLFCOURSE_QUERYResult;
  }
}
